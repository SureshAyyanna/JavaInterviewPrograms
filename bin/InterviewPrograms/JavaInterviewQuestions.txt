Java-Basic *******************
1. Types of polymorphism 
2. Difference between override and overload 
3. Methods that cannot be overloaded 
4. Static block and instance block 
5. Difference in Static and non static 
6. Encapsulation and common use cases 
7. Abstract vs interfaces 
8. Inheritance in java 
9. Methods that cannot be overloaded 
10. Type casting in java 
11. String buffer and string builder 
12. Why string is immutable in java 
13. How to handle exceptions 
14. Can I write try catch without the catch block 
15. Difference between throws and throw 
16. Use of iterator in java 
17. Difference in Final, finally and finalize 
18. Boxing and unboxing in java 
19. Increment and decrement operation 
20. Variable Args
21. This and super keyword in java 
22. Issues during Swtich case without break
23. Upcasting and downcasting 
24. Baseclass of all class in java 
25. Baseclass of error and exceptions 
26. Access specifiers 
27. Continue and break statement 
28. Can main method return any value 
29. Can we overload main method. What happens when overloaded 
30. how to execute and statement before main method 
31. Difference between == and equals() 
32. Can user declare constructor as final 
33. Can we cast any other type to Boolean data with type casting. 
34.does java compile if user use 'static public void' instead of public static void' 
35.can we use this() and super() in a constructor 
36. Can we create object of abstract class 
37. Can we create reference for an abstract class 
38. Can we declare a claon as static 
39. What is instanceof k ord 
40. What's the load factor of HashMap 
41. How to prevent a class from being sub classes 
42. Final variable, final method and final class 
43. Ways to create a string variable. 
44. What is gc() - garbage collector 
45. Subclass and innerclass 
46. Infinite loop in java 
47. How to make copy of an element 
48. Checked and unchecked exceptions
*******************
Java Collection
*******************
1. Classes inside List interface, Set interface, Map Interface 
2. Arraylist vs Linkedlist 
3. Arraylist vs array 
4. Arraylist vs vector or stack 
5. Which class of List Interface to be used if user have more insertions and deletions 
6. Which class of List Interface to be used if user have more retrieval 
7. Set Interface: HashSet, TreeSet, SortedSet 
8. Map - HashMap, Hash Table, TreeMap, LinkedHashMap. 
9. Stack and Queue 
10. How to maintain insertion order in Set, List and Мар 
11. How to sort elements in ascending order in Set and Map
*******************